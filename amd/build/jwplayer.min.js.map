{"version":3,"sources":["../src/jwplayer.js"],"names":["define","jwplayer","$","ajax","log","module","player","context","eventMap","started","paused","seeked","resumed","completed","failed","flipEventMap","init","playerSetup","config","licensekey","key","playerid","length","logError","type","message","playerinstance","setup","setupdata","downloadbtn","addButton","img","tttext","window","open","getPlaylistItem","file","on","events","forEach","eventName","getEventName","logEvent","mdlEventName","event","args","title","position","parseInt","getPosition","offset","when","call","methodname","fail","error","setupPlayer"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JW Player module.\n *\n * @module     media_jwplayer/jwplayer\n * @package    media_jwplayer\n * @copyright  2017 Ruslan Kabalin, Lancaster University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jwplayer', 'jquery', 'core/ajax', 'core/log', 'module'], function(jwplayer, $, ajax, log, module) {\n    var player = {\n        /** @var {Number} context ID of the page. */\n        context: null,\n\n        /** @var {Object} event map. */\n        eventMap: {\n            started:   'firstFrame',\n            paused:    'pause',\n            seeked:    'seek',\n            resumed:   'play',\n            completed: 'complete',\n            failed:    'error'\n        },\n\n        /** @var {Object} event map reversed. */\n        flipEventMap: {},\n\n        /**\n         * Initialise the player instance.\n         *\n         * @method  init\n         * @param   {Object}    playerSetup JW Player setup parameters.\n         * @param   {Number}    context     The context of the current page.\n         */\n        init: function (playerSetup, context) {\n            player.context = context;\n\n            if (module.config().licensekey) {\n                jwplayer.key = module.config().licensekey;\n            }\n\n            if (!$('#' + playerSetup.playerid).length) {\n                player.logError({\n                    type: 'setupError',\n                    message: 'The target element for player setup (#' + playerSetup.playerid + ') is missing.'\n                });\n                return;\n            }\n\n            let playerinstance = jwplayer(playerSetup.playerid);\n            playerinstance.setup(playerSetup.setupdata);\n\n            // Add download button if required.\n            if (typeof(playerSetup.downloadbtn) !== 'undefined') {\n                playerinstance.addButton(playerSetup.downloadbtn.img, playerSetup.downloadbtn.tttext, function() {\n                    // Grab the file that's currently playing.\n                    window.open(playerinstance.getPlaylistItem().file + '?forcedownload=true');\n                }, \"download\");\n            }\n\n            // Track errors and log them.\n            playerinstance.on('setupError', player.logError);\n            playerinstance.on('error', player.logError);\n\n            // Track required events and log them in Moodle.\n            playerSetup.events.forEach(function (eventName) {\n                if (player.getEventName(eventName) !== 'undefined') {\n                    player.flipEventMap[player.getEventName(eventName)] = eventName;\n                    playerinstance.on(player.getEventName(eventName), player.logEvent);\n                }\n            });\n        },\n\n        /**\n         * Event mapping helper.\n         *\n         * @method getEventName\n         * @param  {String} mdlEventName media_jwplayer plugin event.\n         * @return {String}\n         */\n        getEventName: function(mdlEventName) {\n            return player.eventMap[mdlEventName];\n        },\n\n        /**\n         * Event logging.\n         *\n         * @method logEvent\n         * @param {Object} event JW Player event.\n         */\n        logEvent: function(event) {\n            let args = {\n                context:    player.context,\n                event:      player.flipEventMap[event.type],\n                title:      this.getPlaylistItem().file,\n                position:   parseInt(this.getPosition())\n            };\n\n            if (typeof this.getPlaylistItem().title !== 'undefined') {\n                // If title is defined, use it.\n                args.title = this.getPlaylistItem().title;\n            }\n\n            if (event.type === 'seek') {\n                // Offset is only valid for 'seek' event.\n                args.offset = parseInt(event.offset);\n            }\n\n            if (event.type !== 'error') {\n                $.when(\n                    ajax.call([\n                        {\n                            methodname: 'media_jwplayer_playback_event',\n                            args: args\n                        }\n                    ])[0]\n                ).fail(log.error);\n            }\n        },\n\n        /**\n         * Error logging.\n         *\n         * @method logError\n         * @param  {Object} event JW Player event.\n         */\n        logError: function(event) {\n            if (event.type === 'error') {\n                log.error('media_jwplayer error: ' + event.message);\n            } else if (event.type === 'setupError'){\n                log.error('media_jwplayer setup error: ' + event.message);\n            }\n        }\n    };\n\n    return /** @alias module:media_jwplayer/jwplayer */ {\n        /**\n         * Setup player instance.\n         *\n         * @method  setupPlayer\n         * @param   {Object}    playerSetup JW Player setup parameters.\n         * @param   {Number}    context     The context of the current page.\n         */\n        setupPlayer: player.init\n    };\n});"],"file":"jwplayer.min.js"}