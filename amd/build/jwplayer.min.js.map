{"version":3,"sources":["../src/jwplayer.js"],"names":["define","jwplayer","$","ajax","log","module","config","str","player","context","eventMap","started","paused","seeked","resumed","completed","reqEventMap","init","playerSetup","playerId","length","Error","licensekey","key","playerInstance","setup","setupdata","showdownloadbtn","addDownloadButton","events","forEach","eventName","getEventName","on","logEvent","logerrors","logError","event","error","message","get_string","done","tooltip","iconPath","wwwroot","addButton","window","open","getPlaylistItem","file","fail","mdlEventName","type","playReason","pauseReason","args","title","position","parseInt","getPosition","offset","when","call","methodname","code","setupPlayer"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JW Player module.\n *\n * @module     media_jwplayer/jwplayer\n * @package    media_jwplayer\n * @copyright  2017 Ruslan Kabalin, Lancaster University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jwplayer',\n    'jquery',\n    'core/ajax',\n    'core/log',\n    'module',\n    'core/config',\n    'core/str'\n], function(jwplayer, $, ajax, log, module, config, str) {\n    var player = {\n        /** @var {Number} context ID of the page. */\n        context: null,\n\n        /** @var {Object} events map. */\n        eventMap: {\n            started:   'firstFrame',\n            paused:    'pause',\n            seeked:    'seek',\n            resumed:   'play',\n            completed: 'complete'\n        },\n\n        /** @var {Object} requested events map. */\n        reqEventMap: {},\n\n        /**\n         * Initialise the player instance.\n         *\n         * @method  init\n         * @param   {Object} playerSetup JW Player setup parameters.\n         * @param   {String} playerId    JW Player target element id.\n         * @param   {Number} context     The context of the current page.\n         */\n        init: function(playerSetup, playerId, context) {\n            player.context = context;\n\n            if (!$('#' + playerId).length) {\n                throw new Error('The target element for player setup (#' + playerId + ') is missing.');\n            }\n\n            if (module.config().licensekey) {\n                jwplayer.key = module.config().licensekey;\n            }\n\n            // Setup player.\n            let playerInstance = jwplayer(playerId);\n            playerInstance.setup(playerSetup.setupdata);\n\n            // Add download button if required.\n            if (playerSetup.showdownloadbtn) {\n                player.addDownloadButton(playerInstance);\n            }\n\n            // Track required events and log them in Moodle.\n            playerSetup.events.forEach(function(eventName) {\n                if (typeof player.getEventName(eventName) === 'undefined') {\n                    throw new Error(\"Event tracking for '\" + eventName + \"' has no JWPlayer API event mapping.\");\n                }\n                player.reqEventMap[player.getEventName(eventName)] = eventName;\n                // Attach event processing callbacks.\n                playerInstance.on(player.getEventName(eventName), player.logEvent);\n            });\n\n            // Track errors and log them.\n            if (playerSetup.logerrors) {\n                playerInstance.on('error', player.logError);\n            }\n            playerInstance.on('error', function(event) {\n                // Log error to console.\n                log.error('media_jwplayer error: ' + event.message);\n            });\n            playerInstance.on('setupError', function(event) {\n                // Log setup error to console.\n                log.error('media_jwplayer setup error: ' + event.message);\n            });\n        },\n\n        /**\n         * Add download button.\n         *\n         * @method addDownloadButton\n         * @param  {Object} playerInstance JW Player instance.\n         */\n        addDownloadButton: function(playerInstance) {\n            str.get_string('downloadbuttontitle', 'media_jwplayer').done(function(tooltip) {\n                const iconPath = config.wwwroot + '/media/player/jwplayer/pix/download.svg';\n                playerInstance.addButton(iconPath, tooltip, function() {\n                    // Grab the file that's currently playing.\n                    window.open(playerInstance.getPlaylistItem().file + '?forcedownload=true');\n                }, \"download\");\n            }).fail(log.error);\n        },\n        /**\n         * Event mapping helper.\n         *\n         * @method getEventName\n         * @param  {String} mdlEventName media_jwplayer plugin event.\n         * @return {String}\n         */\n        getEventName: function(mdlEventName) {\n            return player.eventMap[mdlEventName];\n        },\n\n        /**\n         * Event logging.\n         *\n         * @method logEvent\n         * @param  {Object} event JW Player event.\n         */\n        logEvent: function(event) {\n            if (event.type === 'play' && event.playReason !== 'interaction') {\n                // Play event resulted not from user action, skipping.\n                return;\n            }\n            if (event.type === 'pause' && event.pauseReason !== 'interaction') {\n                // Pause event resulted not from user action, skipping.\n                return;\n            }\n\n            let args = {\n                context:    player.context,\n                event:      player.reqEventMap[event.type],\n                title:      this.getPlaylistItem().file,\n                position:   parseInt(this.getPosition())\n            };\n\n            if (typeof this.getPlaylistItem().title !== 'undefined') {\n                // If title is defined, use it.\n                args.title = this.getPlaylistItem().title;\n            }\n\n            if (event.type === 'seek') {\n                // Offset is only valid for 'seek' event.\n                args.offset = parseInt(event.offset);\n            }\n\n            // Perform webservice call.\n            $.when(\n                ajax.call([\n                    {\n                        methodname: 'media_jwplayer_playback_event',\n                        args: args\n                    }\n                ])[0]\n            ).fail(log.error);\n        },\n\n        /**\n         * Error logging.\n         *\n         * @method logError\n         * @param  {Object} event JW Player event.\n         */\n        logError: function(event) {\n            // Error needs to be replayed and logged.\n            let args = {\n                context:    player.context,\n                title:      this.getPlaylistItem().file,\n                position:   parseInt(this.getPosition()),\n                code:       event.code,\n                message:    event.message\n            };\n\n            if (typeof this.getPlaylistItem().title !== 'undefined') {\n                // If title is defined, use it.\n                args.title = this.getPlaylistItem().title;\n            }\n\n            // Perform webservice call.\n            $.when(\n                ajax.call([\n                    {\n                        methodname: 'media_jwplayer_playback_failed',\n                        args: args\n                    }\n                ])[0]\n            ).fail(log.error);\n        }\n    };\n\n    return /** @alias module:media_jwplayer/jwplayer */ {\n        /**\n         * Setup player instance.\n         *\n         * @method  setupPlayer\n         * @param   {Object} playerSetup JW Player setup parameters.\n         * @param   {String} playerId    JW Player target element id.\n         * @param   {Number} context     The context of the current page.\n         */\n        setupPlayer: player.init\n    };\n});\n"],"file":"jwplayer.min.js"}